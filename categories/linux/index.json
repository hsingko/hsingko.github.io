[{"content":"最近看了《子弹笔记法》，又想要折腾GTD工作法了。为什么起这个念头呢？那是因为2020都快结束了，而年初的计划根本就没有实现啊，感觉又白白浪费了一年，而我的青春已经所剩无几了（甚至到了连说“青春”两个字都要厚着脸皮的地步）。看了这本书之后，我决心要通过一个外部的系统来强迫自己去做事情，不然由着自己性子的话，必定一事无成。\n而说到GTD，那就不得不提伟大的orgmode了，那篇伟大的Org Mode - Organize Your Life In Plain Text!相信每一个程序员都看过，但是真正实践起来的却寥寥无几，这不仅仅是因为emacs的上手难度，更是因为在emacs里中文输入非常繁琐，根本爽不起来。今天偶然看到emacs-rime这个项目，原来已经有先行者解决了我们的痛点！于是一点也不懂lisp的我（翻过几章SICP早就忘了）鼓起勇气决定挑战这座大山。\n使用环境 OS: Manjaro 20.2 Nibia\nemacs配置：DOOM\n安装emacs-rime 如果本机没有rime的，要先安装librime。\n1  :~/.doom.d/packages.el\" data-lang=\":~/.doom.d/packages.el\"(package! rime)   然后在命令行执行：\n1  ~/.emacs.d/bin/doom sync   然后启动emacs，在任意文本编辑界面输入ctrl+\\就可以调出rime输入中文了，再按一次ctrl+\\就能切换回英文输入。\nemacs-rime配置 默认的候选词是在窗口底部显示的，太蛋疼了。\n我们可以通过posframe来悬浮显示（posframe已经在doom中内置了）。\n1  :~/.doom.d/config.el\" data-lang=\":~/.doom.d/config.el\"(setq rime-show-candidate \u0026#39;posframe)   现在输入法开始变得酷炫起来了。\n输入法配置：切换简体、双拼 输入alt+x rime-select-schema可以切换输入方案，如果你平时就在使用rime，你会发现emacs-rime的配置和你在用的不一样？！原来emacs-rime自带了一套配置，文件位置是在：~/.emacs.d/.local/etc/rime目录下，你可以把你的配置文件整个拷贝到这个目录下。\n也可以在config.el中加入设置：\n1  (setq rime-user-data-dir \u0026#34;~/.local/share/fcitx5/rime\u0026#34;) ;改成所需的目录   但是如果是这样设置会导致无法使用用户词库，也不知道什么原因，所以我还是用的还是拷贝文件的形式，然后用定时执行rime-sync进行词库同步。\n总结 一番调教之后emacs已经变得很适合中文用户使用了，接下来已经没什么能阻挡我学习orgmode了！\n","description":"","id":0,"section":"post","tags":["rime","emacs"],"title":"在doom emacs中安装emacs-rime","uri":"https://hsingko.github.io/post/%E5%9C%A8doom_emacs%E4%B8%AD%E5%AE%89%E8%A3%85emacs-rime/"},{"content":"    真不知道是哪个天才想出来的，居然在搜索框里放广告，每次想要搜点什么东西就得捏着鼻子看网站的弱智推广。今天终于忍不了了，决定想办法把这些狗皮癣给干掉。\ngoogle了一番之后，参考了这两个帖子12,终于成功地用ublock origin把两个站的广告给屏蔽了。\n用法：在ublock origin的My Filters中添加如下两行代码\nwww.zhihu.com##input.Input::-webkit-input-placeholder:style(color: transparent !important) www.bilibili.com##input.nav-search-keyword::-webkit-input-placeholder:style(color: transparent !important) 如下：\n  效果：\n    也可以用Stylus插件，不过秉承着“如无必要，勿增实体”的原则，我还是喜欢直接用现成的插件。\n https://bbs.saraba1st.com/2b/thread-1955259-1-1.html \u0026#x21a9;\u0026#xfe0e;\n https://www.v2ex.com/t/649723 \u0026#x21a9;\u0026#xfe0e;\n   ","description":"","id":1,"section":"post","tags":["ad","chrome"],"title":"利用ublock origin去除知乎、bilibili上的搜索框广告","uri":"https://hsingko.github.io/post/fuck-ad/"},{"content":"生活已经如此艰难，所以我们就一起来看轻松愉快的漫画吧。\n日常类 《伯纳德小姐说》 作者：施川汤雨期\n  没错，封面上这个一脸呆样的家伙就是漫画的主人公伯纳德小姐：“在图书馆的角落，她一直一个人静静地读书，就像是一个读书家一样。”\n是的，这是一本关于读书之人的漫画。但不同于其他同类题材漫画的一点是，伯纳德小姐看书超过五分钟就会困，比起读书更喜欢装出读书的样子，非但如此她还振振有辞：“一旦读过一本书，那就再也回不到读过之前了。相对于那些已经读过这本书的人，我反而会感觉到一种优越感呢。”\n真正的读书家自然也会跑出来痛斥：\n  从伯纳德小姐的欢乐吐槽里可以看出作者的阅读量非常可观，不像前一阵子出的《小书痴的下克上》通篇都是讲主角多么书痴，却没有展现出具体的细节，伯纳德小姐虽然号称“读书家-伪”，却往往能从一个新奇的角度观察我们耳熟能详的名作。\n随便一提，我非常喜欢博尔赫斯的一句话：“如果有天堂，那应该是图书馆的模样。”这部漫画很少见地将全部情节都安排在小小的图书室里，我想漫画的作者也是个痴迷于读书的人吧。\n《郁闷饭》 作者：施川汤雨期\n  和伯纳德小姐是同一个作者，画风相当有辨识度，涂鸦似的人物却非常有表现力。这部漫画差不多是作者早年生活的自述，虽然标题看上去是美食番，但主角却不像《孤独的美食家》里的小五郎那样把吃饭当成是一种享受。同样是独自一人，这部漫画的主角郁野常吃的却是过期了的口香糖、便利店买的小面包，偶尔去餐厅吃饭的时候还要提心吊胆地装作是有工作的社会人模样——他毕业以后就一直找不到工作。《孤独的美食家》并不孤独，《郁闷饭》却是真的郁闷。\n常常一边看着漫画，一边吃着早已腻味的外卖，看到郁野出糗的桥段时，我笑着笑着眼角也有些湿润了，饭果然还是和别人一起吃的时候香。\n  《黄昏游记》 作者：ともひ\n  听说在废弃的隧道里会和幽灵插肩而过？在回转楼梯上上下下会进入异界是真的吗？神社的鸟居为什么会往下滴血？现在就和可爱的少女们一起去小镇寻找怪谈的真相吧！\n  怪谈类 《黑街》 作者：小池ノクト\n主角的老爹经常换工作，在超市里喂过丧尸，在施工现场挖出过诡异的生物，还在下水道里守卫人类的和平？！老爹终于因为过劳住院了，为了补贴家用主角只好到澡堂打工，没想到这家澡堂居然是卖鱼的，卖的还都是死鱼。\n  总之这是一个非常狂気同时也很黑色幽默的故事，看着他们一本正经召唤邪神拯救小镇的时候我终于忍不住笑出声来，如果你和我一样喜欢看B级恐怖片，那这部漫画一定不要错过。\n《灰色兼职：逃亡禁止》    灰色兼职。 那就是合法违法都含有的灰色领域的高额报酬的兼职。 那份钱，就是你生命的价格。 因为某件事情想要赚大钱的两位少女，以悠哉的心情开始着手灰色兼职——\n 看封面就知道这部漫画非常鬼畜了，作者也非常丧尸，经常用一页一段话的形式来水，像这样：\n  别看作者怪物画得很惊悚，但其实剧情非常无厘头，主角们也很搞笑，比如女主有特异功能，能通过气味预知危险，但是一到关键时刻就会“石化”。和《黑街》是差不多的风格，也是搞笑怪谈。\n","description":"","id":2,"section":"post","tags":["manga"],"title":"现在在追的漫画","uri":"https://hsingko.github.io/post/manga/"},{"content":"shortcodes其实就是hugo提供的一种增强markdown表现力的工具。\nhugo自带的shortcode 其实shortcode具体是什么东西没必要搞清楚，知道它能干什么就好，它可以：\n1.插入视频 目前支持vimeo，youtube。以youtube为例，比如你想要分享链接\n1  https://www.youtube.com/watch?v=CDtQ3rai9Ks   那么只要在markdown中输入：\n1  {{\u0026lt; youtube CDtQ3rai9Ks \u0026gt;}}   效果：\n  2.插入图片 这个功能不怎么有用，还不如markdown的简洁。唯一的优点是可以自定义图片的长宽。\n1  {{\u0026lt; figure src=\u0026#34;/images/cyberpunk/cyberpunk.jpg\u0026#34; title=\u0026#34;cyberpunk\u0026#34; height=800 width=600 \u0026gt;}}   效果：\n  cyberpunk   3.插入gist 目标：\n1  https://gist.github.com/spf13/7896402   shortcode:\n1  {{\u0026lt; gist spf13 7896402 \u0026gt;}}   效果：\n 4.插入\u0026quot;shortcode\u0026quot; 有时候你想要在markdown中写shortcode字符串，但又不想被hugo瞎转换，就比如上面我做的那样，那只要在{{\u0026lt;\u0026hellip;\u0026gt;}}中间用一对/**/括住shortcode就可以了，就像下面这样：\n 你也可以自己编写(抄袭)shortcode 作为我这种资深伸手党兼菜鸡码农，代码自然是能抄就抄，很多功能丰富的模板都自带了一些好用的shortcode，我们只要知道从那里copy就可以了。目录是在：\n1  themes/\u0026lt;victim-theme\u0026gt;/layouts/shortcodes/*   ","description":"","id":3,"section":"post","tags":["hugo"],"title":"Hugo Shortcode简介","uri":"https://hsingko.github.io/post/hugo-shortcodes/"},{"content":"上个星期偶然看到有博客说fcitx5在arch上已经比较好用了，于是又大着胆子卸载了fcitx装上了fcitx5。用着确实很爽，因为界面漂亮，差不多是一个高仿版的win10输入法了。词典方面也装了肥猫的维基词库，但是平时输入的时候没什么明显的感觉，一些作家的名字还是没有录入，比如“中禅寺秋彦”、“三津田信三”等一些日本的推理作家。而且词频也很奇怪，我用的是双拼输入法，打词组的时候首页备选框里有很多单字，翻了两三页却又出现了我想要的词组。\n现在一个星期用下来，单纯从输入法的角度看，我感觉比起fcitx的sunpinyin并没有什么优势，如果不是很在意fctix丑丑的颜值的话，完全没有必要更新，因为会遇到非常多的坑。一些程序并不支持fcitx5，目前我遇到的有两个：\n anki。比aur源更新的版本均无法调出输入法，具体来说就是版本号大于2.1.26的都可以告别fcitx5了。老版本能用新版本反而用不了，这也是挺其妙的。倒不是非要用最新版本的anki,但是有些插件有版本要求，比如awesomeTTS。如果对插件有需求的还是继续用fcitx吧。 foxit-reader。这个就比较要命了，linux下好用的pdf阅读器可不多，这个没法用的话在pdf上做注解都会很麻烦。github上也有人提出了issue，看fcitx5作者的意思是这个问题没法由fcitx5解决。  我相信会有坑的不仅仅只有这么几个，fcitx5还没有成为用户使用的主流输入法，所以fcitx还会继续挺很久。况且其实还是有办法挽救fcitx的颜值的，有款叫kimtoy的界面管理器能把fcitx配置得和macOS输入法差不多的样子。所以追求稳定的用户还是不要更新了，要想取代fcitx，fcitx5还有很长的路要走。\n","description":"","id":4,"section":"post","tags":["linux"],"title":"从fcitx升级到fcitx5","uri":"https://hsingko.github.io/post/%E4%BB%8Efcitx%E5%8D%87%E7%BA%A7%E5%88%B0fcitx5/"},{"content":"又开始折腾起博客了，和大多数人一样，我已经折腾了好几次博客了。从wordpress到hexo、hugo，再到blogspot。现在又回归到了hugo，起因是今天看到一个特别漂亮的博客所以眼馋了。\n主题 说实话，自己搭建博客，最头痛的就是主题了，原因就是选择太多了，试用了一大堆主题之后，最终还是选择了这款classic，简单就是美。\n这里顺便记录一下试用过的主题的优缺点，避免以后再踩坑：\n1. Anatole @2020-11-06  优点：精致漂亮 缺点：左边的侧栏实在太宽了，占了一半了，看文章的时候都得对着那么一张大脸，实在是太自恋了  2.hyde hyde @2020-11-04  优点：这款其实很不错了，简洁美观，默认字体也不错，接近我理想中的主题 缺点：太像API doc了，写文章的时候感觉就是在写开发文档  3.terminal @2020-11-01  优点：漂亮，惊艳 缺点：太黑了，真的是太黑了  4.console @2020-10-23  优点：简洁美观 缺点：不支持中文，在路径栏会中文会变成URL编码，虽然改改应该能用，但是还是太麻烦了  5.even @2020-09-11  优点：中文支持好，功能是我见过的最丰富的 缺点：太多人用了，容易撞脸；功能丰富的同时，设置也变得很复杂，其实很多东西我永远都用不到  6.diary @2020-10-13  优点：我一开始选择的是这个主题，他在简洁和美观之间做到了比较好的平衡；同样是两栏设计，就比上面的hyde-hyde漂亮得多 缺点：非常可惜，这个主题有bug：封面图会莫名其妙地消失，然后又莫名其妙地出现，作者自己的博客上也有这个问题。另外就是使用了google font api，在国外用当然没什么问题，但是在强国，使用体验就很糟糕了，页面会在一段时间之后突然抖动一下，然后整个页面的字体就忽然变了。  为什么最后选择了classic? hugo的主题看似多样，其实能称心如意的并不多。别看预览图漂亮，用起来就问题不断，要么是页面加载慢，要么是中文字体太丑。这其实也可以理解，毕竟大家都是用爱发电，没道理给你免费用的模板就能达到商业水准。可以推想，在开发时间相同的情况下，功能越复杂、页面越精致，那就越偏向于作者个人的需求，那么我们这些伸手党自然用起来就会觉得越别扭。\n那还不如用那些最简洁的模板，这款classic就是其中之一，简单漂亮，加载快，再加上个人比较偏爱复古风格，恰好就是我心目中的NO.1。其实这么多模板看下来，有些页面完全冗余的，比如/home和/posts的功能都是展示文章列表，前者不过是多了几行没什么信息量的文字，完全可以去掉，只留下/-\u0026gt;/posts,/categories,/tags,最多再加个/about。\n简单也有简单的好处。有些模板样式文件一大堆，自己想改个功能麻烦得要死。以classic为例，所有的样式文件加起来也不超过10个，代码逻辑清晰明了：\n作为比较，看看even的样式文件（还有几个文件夹没展开）：\n反正我的手脚指都用上也算不过来，可以想象要想自定义一些功能会多么头痛。就如同新入职接手别人的代码一样，我们总是希望历史代码越简单越好。毕竟用hugo这类工具总免不了折腾，选择简单清晰的模板在方便修改的同时还有助于理解hugo本身，而不至于陷入第三方配置的泥潭。\n部署 想要搭建一个能在大陆正常访问的站点，还想不用承受犯罪嫌疑人般的待遇(指备案)，可以选择的方法其实不多。除非家里有矿，能配齐vps+国外域名，一般还是选择用免费的静态托管站点，流行的选择有两个，一个是github pages，一个是netlify。前者自然不必说，值得一提的是，netlify支持自动构建站点，只要写好markdown文件push到git服务器，netlify钩子就会自动构建出新版本的网页并部署。听起来很不错吧？但是之前我试用的时候，总是构建失败，看命令行似乎和hugo版本有关。实在是懒得折腾，而且要使用netlify要在博客目录下引入一些新的配置文件，在我看来是比较dirty的方法；再考虑到netlify随时可能被墙的风险，最后还是放弃了。\ngithub pages自然不错，背靠github这棵大树，总不至于被墙，毕竟国内的“自主研发”可全靠这个了，要是被墙，一大票的码农都得骂街吧。但是submodule的方式总是有点麻烦，虽然能用hugo官方提供的deploy.sh，脚本能跑起来，但是用了几次之后就会莫名其妙地将public文件夹add进主项目然后推送到github，本应该更新的github pages仓库就一直停留在上一个版本。我也不知道什么原因，可能什么误操作，反正最后处理起来很蛋疼，要先删除remote上的public，然后重新add submodule，烦不胜烦，现在就暂时先用着，等再遇到了的时候，仔细排查吧。\n","description":"","id":5,"section":"post","tags":["it","blog","hugo"],"title":"Hugo折腾笔记","uri":"https://hsingko.github.io/post/hugo%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0/"}]